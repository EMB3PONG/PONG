/*
 * Copyright (c) 2009 Xilinx, Inc.  All rights reserved.
 *
 * Xilinx, Inc.
 * XILINX IS PROVIDING THIS DESIGN, CODE, OR INFORMATION "AS IS" AS A
 * COURTESY TO YOU.  BY PROVIDING THIS DESIGN, CODE, OR INFORMATION AS
 * ONE POSSIBLE   IMPLEMENTATION OF THIS FEATURE, APPLICATION OR
 * STANDARD, XILINX IS MAKING NO REPRESENTATION THAT THIS IMPLEMENTATION
 * IS FREE FROM ANY CLAIMS OF INFRINGEMENT, AND YOU ARE RESPONSIBLE
 * FOR OBTAINING ANY RIGHTS YOU MAY REQUIRE FOR YOUR IMPLEMENTATION.
 * XILINX EXPRESSLY DISCLAIMS ANY WARRANTY WHATSOEVER WITH RESPECT TO
 * THE ADEQUACY OF THE IMPLEMENTATION, INCLUDING BUT NOT LIMITED TO
 * ANY WARRANTIES OR REPRESENTATIONS THAT THIS IMPLEMENTATION IS FREE
 * FROM CLAIMS OF INFRINGEMENT, IMPLIED WARRANTIES OF MERCHANTABILITY
 * AND FITNESS FOR A PARTICULAR PURPOSE.
 *
 */

/*
 * helloworld.c: simple test application
 */

#include <stdio.h>
#include "platform.h"
#include "mblaze_nt_types.h"
#include "xparameters.h"
#include "xgpio.h"

void print(char *str);

int fromBinary(char *s) {
  return (int) strtol(s, NULL, 2);
}

int main()
{
	int i = 0;
	int going_left;
	int going_right;
	uint32_t counter = 0;
	uint32_t ball_x = 1023;
	uint32_t ball_y = 1023;
	uint32_t last_ball_pos = 0;
	uint32_t ball_speed = 0;
//	uint32_t *ptr_pushButtons, *ptr_LEDs, *ptr_ballColor;
	volatile uint32_t* ptr_pushButtons = ((volatile uint32_t*)(XPAR_PUSH_BUTTONS_3BIT_BASEADDR));
	volatile uint32_t* ptr_LEDs = ((volatile uint32_t*)(XPAR_LEDS_8BIT_BASEADDR));
	volatile uint32_t* ptr_ballColor = ((volatile uint32_t*)(XPAR_BALL_COLOR_O_BASEADDR));
	volatile uint32_t* ptr_bat_pos = ((volatile uint32_t*)(XPAR_BATPOS_L_R_BASEADDR));
	volatile uint32_t* ptr_ball_pos = ((volatile uint32_t*)(XPAR_BALLPOS_XY_BASEADDR));

    init_platform();

    print("Hello World\n\r");

    while(1){

    	ball_y =  fromBinary(ptr_ball_pos);
    	//last_ball_pos = ptr_ball_pos;
    	//after time
    	//if (ptr_ball_pos)
    	//ball_speed =

    	int i=0,len=0,r=0,w;

    	    for(i=0;i<20;i++)
    	    {
    	    		if(i < 10) {
    	    			w = pow(2,1);
    	    			ball_x += ptr_ball_pos[i]*w;
    	    		}
       	    }
    	    printf("Decimal is :: %d\n\n",r);


    	counter++;
    	*ptr_ballColor = counter;

    	// Set LEDs according to push buttons
    	*ptr_LEDs = *ptr_pushButtons;

    	// Delay
    	for (i = 0;  i < 500000; ++ i);
    }

    return 0;
}
